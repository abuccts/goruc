#!/usr/bin/env bash
#
# goruc: command line interface to login go.ruc.edu.cn
# Please refer to README for more details.
#
# Copyright 2016 Yifan Xiong
# https://github.com/abuccts/goruc
#
# Goruc is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Goruc is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with goruc.  If not, see <http://www.gnu.org/licenses/>.


# ------------------------------------------------------------
# Setup Environment
# ------------------------------------------------------------

# General config
readonly DIR="$(dirname "$(readlink -f "$0" || realpath "$0")")"
readonly COOKIE="$DIR/COOKIE"
readonly SYSTEM="$(uname)"
readonly VERSION='0.1.0'

# ------------------------------------------------------------
# Defaults
# ------------------------------------------------------------

oneline_usage="$0 [options]"
login_addr="http://10.12.16.122"
jump_addr="http://10.12.16.126:801"

# ------------------------------------------------------------
# Functions
# ------------------------------------------------------------

usage() {
  cat  <<-USAGEEOF
	Usage: $oneline_usage
	Try "$0 -h" for more information.
	USAGEEOF
  exit 2
}

help() {
  cat  <<-HELPEOF
	
	USAGE
	    $oneline_usage
	
	OPTIONS
	    -i    login
	    -o    logout
	    -h    help
	
	VERSION
	    $VERSION
	
	HELPEOF
  exit 0
}

err() {
  echo $@
  exit 1
}

# ------------------------------------------------------------
# Main
# ------------------------------------------------------------

if [ $# -eq 0 ]; then
  usage
fi

if [ ! -d $DIR ]; then
  err ">> Doesn't find $DIR!"
fi

while getopts "ioh" opt; do
  case $opt in
    i)
      if [ ! -f $COOKIE ]; then
        response=$(curl -s -c $COOKIE -L $jump_addr/eportal/index.php)
      fi
      read -p "Username: " username
      read -p "Password: " -s password
      echo
      response=$(curl -s -b $COOKIE -L $login_addr -d "DDDDD=$username&upass=$password&0MKKey=123456&R6=0")
      if [[ $response =~ "successfully logged into" ]]; then
        echo ">> Succeed!"
      else
        err ">> Authentication failed, wrong username or password."
      fi
      response=$(curl -s -b $COOKIE -L $jump_addr/eportal/ruc/index.php -d "UID=$username&password=&is_lack=0")
      if [[ $response =~ "php/RucSetting.php" ]]; then
        echo ">> You can connect to internet now :)"
      else
        err ">> An error occured :("
      fi
      exit 0
      ;;
    o)
      if [ ! -f $COOKIE ]; then
        err ">> COOKIE missed, please login first."
      fi
      response=$(curl -s -b $COOKIE -L $jump_addr/eportal/ruc/php/get_user_device.php)
      if ! [[ $response =~ "\"result\":\"ok\"" ]]; then
        err ">> You're not online or the session expired, please login first."
      fi
      sid=$(echo $response | grep -Po '"online_session":.*?[^\\]",' | head -n 1 | grep -o -E '[0-9]+' | head -n 1)
      response=$(curl -s -b $COOKIE -L $jump_addr/eportal/ruc/php/offline_device.php -d "is_auto_login=0&device_list=1|$sid")
      if [[ $response =~ "\"result\":\"ok\"" ]]; then
        echo ">> Logged out successfully."
      else
        err ">> Unknown error."
      fi
      exit 0
      ;;
    h)
      help
      ;;
    *)
      usage
      ;;
  esac
done
